name: Build GoPro‑MAX FFmpeg (with _cal filter) – Windows

on:
  workflow_dispatch:

jobs:
  build-win64:
    runs-on: windows-latest

    steps:
    # 1 ─ empty repo is fine; just need a workspace
    - uses: actions/checkout@v4

    # 2 ─ MSYS2 + GCC, yasm, nasm, OpenCL headers/ICD
    - name: Install MSYS2 toolchain
      uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        update: true
        install: |
          git
          base-devel
          mingw-w64-x86_64-toolchain
          mingw-w64-x86_64-yasm
          mingw-w64-x86_64-nasm
          mingw-w64-x86_64-opencl-headers
          mingw-w64-x86_64-opencl-icd

    # 3 ─ build static x264
    - name: Build static x264
      shell: msys2 {0}
      run: |
        set -e
        git clone --depth 1 https://code.videolan.org/videolan/x264.git
        cd x264
        ./configure --enable-static --disable-opencl --prefix=/mingw64
        make -j"$(nproc)"
        make install

    # 4 ─ clone GoPro fork, inject _cal patch, build FFmpeg
    - name: Patch & build FFmpeg with gopromax_opencl_cal
      shell: msys2 {0}
      run: |
        set -e
        git clone https://github.com/gmat/goproMax-ffmpeg-v5.git
        cd goproMax-ffmpeg-v5

        # --- add the _cal variant of the filter ---
        cat <<'PATCH' > add_cal.patch
diff --git a/libavfilter/vf_gopromax_opencl.c b/libavfilter/vf_gopromax_opencl.c
@@
 static const AVOption gopromax_options[] = {
@@
+/* extra options for cal‑aware version */
+{ "yaw",   "yaw angle in degrees",   OFFSET(yaw),   AV_OPT_TYPE_FLOAT, { .dbl = 0 }, -180, 180, VF },
+{ "pitch", "pitch angle in degrees", OFFSET(pitch), AV_OPT_TYPE_FLOAT, { .dbl = 0 }, -180, 180, VF },
+{ "roll",  "roll angle in degrees",  OFFSET(roll),  AV_OPT_TYPE_FLOAT, { .dbl = 0 }, -180, 180, VF },
 PATCH

        patch -p1 < add_cal.patch

        ./configure \
          --cc=gcc \
          --target-os=mingw32 --arch=x86_64 \
          --enable-cross-compile \
          --enable-gpl --enable-nonfree \
          --enable-opencl \
          --enable-libx264 \
          --disable-asm --disable-doc
        make -j"$(nproc)"

        # copy executables
        cp ffmpeg.exe ffprobe.exe "$GITHUB_WORKSPACE"

        # copy dependent DLLs
        for D in libbz2-1 liblzma-5 libiconv-2 libwinpthread-1 \
                 libgcc_s_seh-1 libstdc++-6 zlib1; do
          cp /mingw64/bin/$D.dll "$GITHUB_WORKSPACE"
        done
        if [ -f /mingw64/bin/OpenCL.dll ]; then
          cp /mingw64/bin/OpenCL.dll "$GITHUB_WORKSPACE"
        else
          cp /mingw64/bin/libOpenCL.dll "$GITHUB_WORKSPACE"
        fi

    # 5 ─ publish artifact
    - name: Upload binaries
      uses: actions/upload-artifact@v4
      with:
        name: ffmpeg-cal-win
        path: |
          ffmpeg.exe
          ffprobe.exe
          *.dll
