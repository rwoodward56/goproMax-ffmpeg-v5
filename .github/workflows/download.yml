name: Build GoPro‑MAX FFmpeg (cal filter) – Windows

on:
  workflow_dispatch:

jobs:
  win64:
    runs-on: windows-latest

    steps:
      # 1. workspace
      - uses: actions/checkout@v4

      # 2. MSYS2 + toolchain
      - name: Set up MSYS2
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: |
            git
            base-devel
            mingw-w64-x86_64-toolchain
            mingw-w64-x86_64-yasm
            mingw-w64-x86_64-nasm
            mingw-w64-x86_64-opencl-headers
            mingw-w64-x86_64-opencl-icd

      # 3. build static x264
      - name: Build x264 static
        shell: msys2 {0}
        run: |
          set -e
          git clone --depth 1 https://code.videolan.org/videolan/x264.git
          cd x264
          ./configure --enable-static --disable-opencl --prefix=/mingw64
          make -j$(nproc)
          make install

      # 4. clone fork, add _cal patch, build FFmpeg
      - name: Patch & build FFmpeg
        shell: msys2 {0}
        run: |
          set -e
          git clone https://github.com/gmat/goproMax-ffmpeg-v5.git
          cd goproMax-ffmpeg-v5

          # add minimal patch that registers gopromax_opencl_cal as an alias
          cat <<'PATCH' > add_cal.patch
          diff --git a/libavfilter/allfilters.c b/libavfilter/allfilters.c
          @@
           extern const AVFilter ff_vf_gopromax_opencl;
          +extern const AVFilter ff_vf_gopromax_opencl_cal;
          @@
           REGISTER_FILTER(GOPROMAX_OPENCL,   gopromax_opencl,   vf);
          +REGISTER_FILTER(GOPROMAX_OPENCL_CAL, gopromax_opencl_cal, vf);
          PATCH
          patch -p1 < add_cal.patch

          ./configure \
            --cc=gcc \
            --target-os=mingw32 --arch=x86_64 \
            --enable-cross-compile \
            --enable-gpl --enable-nonfree \
            --enable-opencl \
            --enable-libx264 \
            --disable-asm --disable-doc
          make -j$(nproc)

          # copy binaries
          cp ffmpeg.exe ffprobe.exe "$GITHUB_WORKSPACE"

          # copy DLL dependencies
          for D in libbz2-1 liblzma-5 libiconv-2 libwinpthread-1 \
                   libgcc_s_seh-1 libstdc++-6 zlib1; do
            cp /mingw64/bin/$D.dll "$GITHUB_WORKSPACE"
          done
          if [ -f /mingw64/bin/OpenCL.dll ]; then
            cp /mingw64/bin/OpenCL.dll "$GITHUB_WORKSPACE"
          else
            cp /mingw64/bin/libOpenCL.dll "$GITHUB_WORKSPACE"
          fi

      # 5. upload
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ffmpeg-cal-win
          path: |
            ffmpeg.exe
            ffprobe.exe
            *.dll
